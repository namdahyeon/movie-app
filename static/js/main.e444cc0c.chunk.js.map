{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["Movie","id","title","year","summary","poster","genres","className","to","pathname","state","src","alt","style","backgroundColor","map","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","props","console","log","Navigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e444cc0c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport './Movie.css';\r\n\r\nfunction Movie({id, title, year, summary, poster, genres}){\r\n    return(\r\n        <div className=\"movie\">\r\n            <Link to={{ \r\n                pathname: '/movie_detail',\r\n                state: {year,title,summary,poster,genres},\r\n            }}>\r\n                <img src={poster} alt={title} title={title} />\r\n                <div className=\"movie_data\">\r\n                    <h3 className=\"movie_title\" style={{backgroundColor:'#eee'}}>{title}</h3>\r\n                    <h4 className=\"movie_year\">{year}</h4>\r\n                    <ul className=\"movie_genres\"> {/* 장르 갯수에 맞게 li를 생성한다. */}\r\n                        {genres.map((genres,index) => {\r\n                            return ( /* \"return\" - ~를 내보낸다 */\r\n                                <li key={index} className=\"movie_genre\">{genres}</li>\r\n                            );\r\n                        })} {/* genres는 배열이므로 \".map()\"사용 가능 */}\r\n                    </ul>\r\n                    <p className=\"movie_summary\">{summary.slice(0,180)} ...</p> {/* \"slice\"메소드: 0~180까지 추출하겠다 */}\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\n/* const Movies = [\r\n    {//movie1\r\n\r\n    },\r\n    {//movie2\r\n        \r\n    }\r\n] */\r\n\r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired, //string.isRequired : 문자가 아니면 에러가 나게 한다.\r\n    poster : PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Movie;\r\n\r\n//SPA (single page application)\r\n// npm install react-router-dom  >>설치(터미널)\r\n// router라우터는 사용자가 입력한 URL을 통해 특정 컴포넌트를 불러옴\r\n// Route 에는 2가지 props를 전달,URL을 위한  path props 와 URL에 맞는 컴포넌트를 불러주기 위한 component props","import { render } from '@testing-library/react';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\n\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n  state = {\r\n    isLoading: true, //key:key vlaue\r\n    movies: [],\r\n  }\r\n\r\n  getMovies = async () => {\r\n    const{\r\n      data:{\r\n        data:{movies},\r\n      },\r\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?genre=animation&sort_by=like_count');\r\n    this.setState({movies, isLoading: false});\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getMovies();\r\n  }\r\n  render(){\r\n    const {isLoading, movies} = this.state; //구조분해할당\r\n    return(\r\n      <section className=\"container\"> \r\n        {isLoading ? \r\n          (<div className=\"loader\">\r\n            <span className=\"loader_text\">'Loading...'</span>\r\n          </div>) :\r\n          (<div className=\"movies\">\r\n              {movies.map(movie => ( <Movie \r\n                                  id={movie.id}\r\n                                  year={movie.year}\r\n                                  title={movie.title}\r\n                                  summary={movie.summary}\r\n                                  poster={movie.medium_cover_image}\r\n                                  genres={movie.genres}\r\n                  /> )\r\n                )\r\n              }\r\n          </div>)\r\n        }\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './About.css';\r\n\r\nfunction About(props) { //여기서 props는 route props이다.\r\n    console.log(props);\r\n    return (\r\n        <div className=\"about_container\">\r\n            <span>\"A JavaScript library for building user interfaces\"</span>\r\n            <span>- React -</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\n/* ['react-router-dom' 설치 터미널 값]\r\nnpm install --save react-router-dom\r\nnpm install --save-dev @types/react-router-dom */\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>{/* a태그를 사용하면 react-router-dom이 리셋되므로 Link속성을 사용한다. */}\r\n            {/* <Link to={{pathname: '/about', state: {fromNavigation: true}}}>About</Link> */}\r\n            {/* pathname- 객체 / fromNavigation- 전달할 내용 */}\r\n            {/* <a href=\"/\">Home</a>\r\n            <a href=\"/about\">About</a> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","//route props\r\n//라우팅 대상이되는 컴포넌트에 넘겨주는 기본 props\r\n\r\n// 리다이렉트\r\n// detail컴포넌트를 직접 주소를 입력해서 들어가면 props가 전달이 안됨. 그때 강제로 Home 컴포넌트로 돌려보내는 것.\r\n\r\nimport React, { Component } from 'react';\r\nimport './Detail.css';\r\n\r\nexport default class Detail extends Component {\r\n    componentDidMount(){\r\n        const {location, history} = this.props;\r\n        if(location.state === undefined){\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {location} = this.props;\r\n        console.log(location.state);\r\n        if(location.state){\r\n            return (\r\n                <div className=\"detail\">\r\n                    <img src={location.state.poster} alt={location.state.title} title={location.state.title} />\r\n                    <div className=\"detail_data\">\r\n                        <h3 className=\"detail_title\" style={{backgroundColor:'#eee'}}>{location.state.title}</h3>\r\n                        <h4 className=\"detail_year\">{location.state.year}</h4>\r\n                        <ul className=\"detail_genres\">\r\n                            {location.state.genres.map((genres, index) => {\r\n                                return (\r\n                                    <li key={index} className=\"detail_genre\">{genres}</li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                        <p className=\"detail_summary\">{location.state.summary.slice(0,180)} ...</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {HashRouter, Route} from 'react-router-dom';\n\nimport Home from './routes/Home';\nimport About from './routes/About';\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\n\nfunction App() {\n  return (\n      <HashRouter>\n        <Navigation />\n        <Route path=\"/\" exact={true} component={Home} /> {/* \"/\"- Home 컴포넌트가 나옴 / exact={true}를 작성해야 \"/ablut\"를 작성하면 Home이 안나온다 */}\n        <Route path=\"/about\" component={About} /> {/* \"/about\" - about 컴포넌트가 나옴 */}\n        <Route path=\"/movie_detail\" component={Detail} />\n      </HashRouter> /* Route컴포넌트는 반드시 HashRouter 안에 있어야한다 */\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n// JSX\n// ReactDOM에 render(그려라)\nReactDOM.render(\n    <App />,document.getElementById('root') //ID가 root인 것에 <App />(App.js)컴포넌트를 넣어라\n);"],"sourceRoot":""}